{"version":3,"sources":["Filter/Filter.module.css","Components/ContactList/ContactList.module.css","redux/slices/contacts.js","redux/slices/filter.js","redux/store.js","Components/Form/Form.jsx","Components/ContactList/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","Components/Form/Form.module.css","Components/ContactList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","contactsSlice","createSlice","name","initialState","id","number","reducers","addContact","state","action","payload","deleteContact","filter","contact","actions","filterSlice","filterContact","persistConfig","key","storage","rootReducer","combineReducers","contacts","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","storeObj","persistor","persistStore","Form","useState","setName","setNumber","dispatch","useDispatch","handleInputChange","event","currentTarget","value","reset","uniqueIdName","uuid","uniqueIdNumber","onSubmit","e","preventDefault","addedNewContact","htmlFor","className","s","formLabel","type","pattern","title","required","onChange","formInput","formBtn","ContactListItem","onDelete","contactItem","contactName","contactNumber","deleteContactBtn","onClick","ContactList","useSelector","contactsList","filterToLowerCase","toLocaleLowerCase","trim","includes","handleInputFilter","map","Filter","filterInputLabel","filterInput","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.51675c69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInputLabel\":\"Filter_filterInputLabel__3rmJo\",\"filterInput\":\"Filter_filterInput___45WS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__1rr6X\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst contactsSlice = createSlice({\r\n  name: \"contacts\", // прописываем название ключа в хранилище\r\n  initialState: [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  reducers: {\r\n    addContact: (state, action) => [...state, action.payload],\r\n    deleteContact: (state, action) =>\r\n      state.filter((contact) => contact.id !== action.payload),\r\n  },\r\n});\r\n\r\nexport const { addContact, deleteContact } = contactsSlice.actions;\r\nexport default contactsSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"contacts\", // прописываем название ключа в хранилище\r\n  initialState: \"\",\r\n  reducers: {\r\n    filterContact: (state, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport const { filterContact } = filterSlice.actions;\r\nexport default filterSlice.reducer;\r\n","// вариант 1 ====== ванильный redux\r\n//import { createStore } from \"redux\";  ========= vanilla Redux\r\n//import { devToolsEnhancer } from \"redux-devtools-extension\"; ========= vanilla Redux\r\n// import { rootReducer } from \"./reducers\";\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from \"@reduxjs/toolkit\";\r\n// import logger from \"redux-logger\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contacts from \"../redux/slices/contacts\";\r\nimport filter from \"../redux/slices/filter\";\r\n\r\n// ==========1============  создание стора на ванильном REDUX\r\n// const store = createStore(rootReducer, devToolsEnhancer());\r\n//==========================================================\r\n\r\n//==============3======================= рабочий код для SLICE\r\n// const rootReducer = {\r\n//   contacts,\r\n//   filter,\r\n// };\r\n// const store = configureStore({ reducer: rootReducer, devTools: true });\r\n//===================================================================\r\n\r\n// ==2== создание стора на REDUX TOOLKIT\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n};\r\n\r\n// const middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: true,\r\n});\r\nconst persistor = persistStore(store);\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n// const store = configureStore({ reducer: persistedReducer, devTools: true });\r\n\r\nconst storeObj = { store, persistor };\r\n\r\nexport default storeObj;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { addContact } from \"../../redux/actions/actions\";\r\nimport { addContact } from \"../../redux/slices/contacts\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport s from \"./Form.module.css\";\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const addedNewContact = {\r\n      name,\r\n      number,\r\n      id: uuid(),\r\n    };\r\n\r\n    // onSubmit(addedNewContact);\r\n    dispatch(addContact(addedNewContact));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const uniqueIdName = uuid();\r\n  const uniqueIdNumber = uuid();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor={uniqueIdName} className={s.formLabel}>\r\n        Name\r\n      </label>\r\n      <br />\r\n      <input\r\n        id={uniqueIdName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleInputChange}\r\n        className={s.formInput}\r\n      />\r\n      <br />\r\n      <label htmlFor={uniqueIdNumber} className={s.formLabel}>\r\n        Number\r\n      </label>\r\n      <br />\r\n      <input\r\n        id={uniqueIdNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={handleInputChange}\r\n        className={s.formInput}\r\n      />\r\n      <br />\r\n      <button type=\"submit\" className={s.formBtn}>\r\n        add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// export default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ id, name, number, onDelete }) => (\r\n  <li className={s.contactItem}>\r\n    <p className={s.contactName}>\r\n      {name}: <span className={s.contactNumber}>{number}</span>\r\n    </p>\r\n    <button\r\n      className={s.deleteContactBtn}\r\n      type=\"button\"\r\n      onClick={() => onDelete(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { deleteContact } from \"../../redux/actions/actions\";\r\nimport { deleteContact } from \"../../redux/slices/contacts\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector((state) => state.contacts);\r\n  const value = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputFilter = (contacts, filter) => {\r\n    const filterToLowerCase = filter.toLocaleLowerCase().trim();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLocaleLowerCase().trim().includes(filterToLowerCase)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {handleInputFilter(contacts, value).map((contact) => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onDelete={() => dispatch(deleteContact(contact.id))}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\n// import { filterContact } from \"../redux/actions/actions\";\r\nimport { filterContact } from \"../redux/slices/filter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector((state) => state.filter);\r\n\r\n  return (\r\n    <>\r\n      <label className={s.filterInputLabel}>Find contacts by name</label>\r\n      <br />\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(e) => dispatch(filterContact(e.target.value))}\r\n        placeholder=\"Contact\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import Form from \"./Components/Form/Form\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport \"./App.css\";\nimport Filter from \"./Filter/Filter\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"InputWrapper\">\n        <h1 className=\"inputTitle\">Phonebook</h1>\n        <Form />\n        <br />\n        <Filter />\n      </div>\n      <div className=\"contactsSection\">\n        <h2 className=\"contactsSectionTitle\">Contacts</h2>\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"Form_formLabel__3jeHL\",\"formInput\":\"Form_formInput__3owpU\",\"formBtn\":\"Form_formBtn__htgy9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__XjTRF\",\"contactName\":\"ContactListItem_contactName__3Jadc\",\"deleteContactBtn\":\"ContactListItem_deleteContactBtn__3NQr_\"};"],"sourceRoot":""}